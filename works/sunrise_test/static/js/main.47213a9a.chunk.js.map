{"version":3,"sources":["components/button/Button.js","components/input/Input.js","components/select/arrow-down.svg","components/select/Select.js","components/checkbox/Checkbox.js","components/questions/trash.svg","components/questions/answer-item.js","components/questions/question-item.js","components/questions/questions.js","App.js","index.js"],"names":["Button","props","label","children","color","className","_className","fullWidth","size","rest","Input","multiline","Select","defaultValue","handleChange","onChange","placeholder","useState","open","setOpen","value","setValue","newValue","acitveOption","find","option","onClick","src","arrowDownIcon","alt","map","Option","idx","React","cloneElement","active","key","Checkbox","checked","defaultChecked","type","AnswerItem","onDelete","error","htmlFor","id","name","e","target","deleteIco","width","QuestionItem","data","errors","answers","changes","setChanges","saveChanges","useEffect","changeField","fieldName","prevData","showAnswersFields","undefined","answerType","question","newVal","requireAnswer","answersError","answer","prevChanges","slice","changeAnswer","deleteAnswer","Math","random","toString","Questions","questions","onChangeQuestion","onAddQuestion","onDeleteQuestion","questionData","newQuestionData","App","title","category","country","state","city","formData","setFormData","setQuestions","setErrors","loading","setLoading","style","maxWidth","onSubmit","preventDefault","newErrors","trim","length","questionsError","questionsErrors","i","questionErrors","answersErrors","a","Object","keys","console","log","validateData","fetch","url","method","body","JSON","stringify","then","Promise","resolve","setTimeout","finally","val","newData","prevQuestions","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47213a9a.chunk.js","sourcesContent":["function Button(props) {\r\n  const {\r\n    label = props.children,\r\n    color = \"primary\",\r\n    className: _className = \"\",\r\n    fullWidth,\r\n    size,\r\n    ...rest\r\n  } = props;\r\n\r\n  const className = `${_className} ${fullWidth ? \"btn-block\" : \"\"} ${\r\n    size ? \"btn-\" + size : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <button className={`btn btn-${color} ${className}`} {...rest}>\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport { Button };\r\n","function Input(props) {\r\n  const { className = \"\", multiline = false, ...rest } = props;\r\n\r\n  if (multiline) {\r\n    return <textarea className={`form-control ${className}`} {...rest} />;\r\n  }\r\n\r\n  return <input className={`form-control ${className}`} {...rest} />;\r\n}\r\n\r\nexport { Input };\r\n","export default __webpack_public_path__ + \"static/media/arrow-down.97c288b7.svg\";","import React, { useState } from \"react\";\r\nimport \"./Select.scss\";\r\nimport arrowDownIcon from \"./arrow-down.svg\";\r\n\r\nfunction Select(props) {\r\n  const {\r\n    className = \"\",\r\n    defaultValue = \"\",\r\n    onChange: handleChange,\r\n    placeholder = \"\",\r\n    ...rest\r\n  } = props;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  const onChange = (newValue) => {\r\n    setValue(newValue);\r\n    setOpen(false);\r\n    handleChange && handleChange(newValue);\r\n  };\r\n\r\n  const acitveOption = props.children.find((option) => {\r\n    return option.props.value === value;\r\n  });\r\n\r\n  return (\r\n    <div className={`Select`} {...rest}>\r\n      <div\r\n        className={`Select__value form-control ${className}`}\r\n        onClick={() => setOpen(!open)}\r\n      >\r\n        <img src={arrowDownIcon} alt=\"arrow\" />\r\n        <span>{acitveOption?.props.label || placeholder}</span>\r\n      </div>\r\n\r\n      {open && (\r\n        <div className=\"Select__dropdown\">\r\n          {props.children.map((Option, idx) =>\r\n            React.cloneElement(Option, {\r\n              active: value,\r\n              onChange: onChange,\r\n              key: idx + value,\r\n            })\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSelect.Option = function (props) {\r\n  const { label, value, active, onChange } = props;\r\n\r\n  return (\r\n    <div\r\n      className={`Select__option ${\r\n        value === active ? \"Select__option_active\" : \"\"\r\n      }`}\r\n      onClick={() => onChange(value)}\r\n    >\r\n      {label}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Select };\r\n","function Checkbox(props) {\n  const {\n    label = \"\",\n    className = \"\",\n    onChange,\n    checked,\n    defaultChecked,\n    ...rest\n  } = props;\n\n  return (\n    <label className={`Checkbox ${className}`} {...rest}>\n      <input\n        className=\"form-check-input me-2\"\n        type=\"checkbox\"\n        onChange={onChange}\n        defaultChecked={defaultChecked}\n        checked={checked}\n      />\n      <span>{label}</span>\n    </label>\n  );\n}\n\nexport { Checkbox };\n","export default __webpack_public_path__ + \"static/media/trash.d10440a0.svg\";","import { Button } from \"../button/Button\";\nimport { Input } from \"../input/Input\";\nimport deleteIco from \"./trash.svg\";\n\nfunction AnswerItem({ idx, value, onChange, onDelete, error }) {\n  return (\n    <div className=\"mb-3 row\">\n      <label htmlFor=\"question\" className=\"col-sm-3 col-form-label\">\n        Answer <b># {idx}</b>\n      </label>\n      <div className=\"col-sm-9\">\n        <div className=\"input-group\">\n          <Input\n            type=\"text\"\n            id=\"answer\"\n            name=\"answer\"\n            defaultValue={value}\n            onChange={(e) => onChange(e.target.value)}\n            className={error ? \"is-invalid\" : \"\"}\n          />\n\n          <Button\n            color=\"danger\"\n            type=\"button\"\n            label={<img src={deleteIco} alt=\"delete icon\" width=\"24\" />}\n            onClick={onDelete}\n          />\n        </div>\n        {error && <div className=\"invalid-feedback d-block\">{error}</div>}\n      </div>\n    </div>\n  );\n}\n\nexport { AnswerItem };\n","import { Select } from \"../select/Select\";\nimport { Checkbox } from \"../checkbox/Checkbox\";\nimport { Input } from \"../input/Input\";\nimport { Button } from \"../button/Button\";\nimport { useEffect, useState } from \"react\";\nimport { AnswerItem } from \"./answer-item\";\n\nfunction QuestionItem({ idx, data, onDelete, onChange, errors = {} }) {\n  const [changes, setChanges] = useState({ answers: data.answers });\n  const { answers = [] } = changes;\n\n  /**\n   * Methods\n   */\n  const saveChanges = () => {\n    onChange(changes);\n  };\n\n  useEffect(saveChanges, [changes]);\n\n  const changeField = (fieldName, value) => {\n    if (fieldName === \"type\" && value === \"custom\") {\n      setChanges((prevData) => ({\n        ...prevData,\n        [fieldName]: value,\n        answers: [],\n      }));\n    } else {\n      setChanges((prevData) => ({\n        ...prevData,\n        [fieldName]: value,\n      }));\n    }\n  };\n\n  const changeAnswer = (idx, value) => {\n    setChanges((prevChanges) => ({\n      ...prevChanges,\n      answers: [\n        ...prevChanges.answers.slice(0, idx),\n        { ...prevChanges.answers[idx], value },\n        ...prevChanges.answers.slice(idx + 1),\n      ],\n    }));\n  };\n\n  const deleteAnswer = (idx) => {\n    setChanges((prevChanges) => ({\n      ...prevChanges,\n      answers: [\n        ...prevChanges.answers.slice(0, idx),\n        ...prevChanges.answers.slice(idx + 1),\n      ],\n    }));\n  };\n\n  const addNewAnswer = () => {\n    setChanges((prevChanges) => ({\n      ...prevChanges,\n      answers: [\n        ...prevChanges.answers,\n        { id: Math.random().toString(), value: \"\" },\n      ],\n    }));\n  };\n\n  // Render\n\n  const showAnswersFields =\n    (changes.answerType === undefined\n      ? data.answerType\n      : changes.answerType) !== \"custom\";\n\n  return (\n    <div className=\"card mb-3\">\n      <h5 className=\"card-header\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-sm-6\">#{idx}</div>\n          <div className=\"col-sm-6 text-end\">\n            <Button\n              color=\"danger\"\n              label=\"Delete\"\n              size=\"sm\"\n              type=\"button\"\n              onClick={onDelete}\n            />\n          </div>\n        </div>\n      </h5>\n      <div className=\"card-body\" onChange={saveChanges}>\n        <div className=\"mb-3 row\">\n          <label htmlFor=\"question\" className=\"col-sm-3 col-form-label\">\n            Question<span className=\"text-danger\">*</span>\n          </label>\n          <div className=\"col-sm-9\">\n            <Input\n              type=\"text\"\n              id=\"question\"\n              name=\"question\"\n              multiline\n              defaultValue={data.question}\n              onChange={(e) => changeField(\"question\", e.target.value)}\n              className={errors.question ? \"is-invalid\" : \"\"}\n            />\n            {errors.question && (\n              <div className=\"invalid-feedback d-block\">{errors.question}</div>\n            )}\n          </div>\n        </div>\n        <div className=\"mb-3 row\">\n          <label htmlFor=\"type\" className=\"col-sm-3 col-form-label\">\n            Answer Type<span className=\"text-danger\">*</span>\n          </label>\n          <div className=\"col-sm-9\">\n            <Select\n              id=\"answerType\"\n              name=\"answerType\"\n              placeholder=\"Select answer type\"\n              defaultValue={data.answerType}\n              onChange={(newVal) => changeField(\"answerType\", newVal)}\n              className={errors.answerType ? \"is-invalid\" : \"\"}\n            >\n              <Select.Option label=\"Radio Buttons\" value=\"radio\" />\n              <Select.Option label=\"Checkbox Buttons\" value=\"checkbox\" />\n              <Select.Option label=\"Custom Input\" value=\"custom\" />\n            </Select>\n            {errors.answerType && (\n              <div className=\"invalid-feedback d-block\">\n                {errors.answerType}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"mb-3 row\">\n          <div className=\"col-sm-9 offset-sm-3\">\n            <Checkbox\n              label=\"Require answer\"\n              defaultChecked={data.requireAnswer}\n              onChange={(e) => changeField(\"requireAnswer\", e.target.checked)}\n            />\n          </div>\n        </div>\n\n        {errors.answersError && (\n          <div className=\"invalid-feedback d-block\">{errors.answersError}</div>\n        )}\n\n        {showAnswersFields && (\n          <div>\n            {answers.map((answer, idx) => (\n              <AnswerItem\n                key={answer.id}\n                idx={idx + 1}\n                value={answer.value}\n                onChange={(newVal) => changeAnswer(idx, newVal)}\n                onDelete={() => deleteAnswer(idx)}\n                error={errors.answers[answer.id] || null}\n              />\n            ))}\n\n            <Button\n              type=\"button\"\n              size=\"sm\"\n              label=\"+ Add Another Answer\"\n              color=\"secondary\"\n              onClick={addNewAnswer}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { QuestionItem };\n","import { Button } from \"../button/Button\";\nimport { QuestionItem } from \"./question-item\";\n\nfunction Questions({\n  questions,\n  onChangeQuestion,\n  onAddQuestion,\n  onDeleteQuestion,\n  errors,\n}) {\n  return (\n    <div>\n      {questions.map((questionData, idx) => (\n        <QuestionItem\n          key={questionData.id}\n          idx={idx + 1}\n          data={questionData}\n          onDelete={() => onDeleteQuestion(idx)}\n          onChange={(newQuestionData) => onChangeQuestion(idx, newQuestionData)}\n          errors={errors[questionData.id] || {}}\n        />\n      ))}\n\n      <Button\n        type=\"button\"\n        label=\"Add a Question\"\n        size=\"lg\"\n        className=\"mb-4 mt-3\"\n        onClick={onAddQuestion}\n      />\n    </div>\n  );\n}\n\nexport { Questions };\n","import { useState } from \"react\";\nimport { Button } from \"./components/button/Button\";\nimport { Input } from \"./components/input/Input\";\nimport { Questions } from \"./components/questions/questions\";\nimport { Select } from \"./components/select/Select\";\n\nfunction App() {\n  /**\n   * State\n   */\n\n  // Common form data\n  const [formData, setFormData] = useState({\n    title: \"\",\n    category: \"\",\n    country: \"\",\n    state: \"\",\n    city: \"\",\n  });\n\n  // Questions data\n  const [questions, setQuestions] = useState([\n    /**\n     * {\n     *   id: \"0.1231313\",\n     *   question: '',\n     *   answerType: '', // radio, checkbox, custom\n     *   requireAnswer: false,\n     *   answers: []\n     * }\n     */\n  ]);\n\n  // Errors\n  const [errors, setErrors] = useState({});\n\n  // Loading\n  const [loading, setLoading] = useState(false);\n\n  /**\n   * Methods\n   */\n\n  const changeField = (fieldName, value) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      [fieldName]: value,\n    }));\n  };\n\n  const changeQuestion = (idx, newData) => {\n    setQuestions((prevQuestions) => [\n      ...prevQuestions.slice(0, idx),\n      {\n        ...prevQuestions[idx],\n        ...newData,\n      },\n      ...prevQuestions.slice(idx + 1),\n    ]);\n  };\n\n  const addNewQuestion = () => {\n    setQuestions((prevQuestions) => [\n      ...prevQuestions,\n      {\n        id: Math.random().toString(),\n        question: \"\",\n        answerType: \"\",\n        requireAnswer: false,\n        answers: [],\n      },\n    ]);\n  };\n\n  const deleteQuestion = (idx) => {\n    setQuestions((prevQuestions) => [\n      ...prevQuestions.slice(0, idx),\n      ...prevQuestions.slice(idx + 1),\n    ]);\n  };\n\n  // Я понимаю что это не лучшее и громоздкое решение, но пока что своими силами делаю так. Только для тетового.))\n  const validateData = () => {\n    const newErrors = {};\n\n    const { title, category, country, city } = formData;\n\n    if (!title.trim()) newErrors.title = \"Enter title\";\n    if (!category.trim()) newErrors.category = \"Select category\";\n    if (!country.trim()) newErrors.country = \"Select country\";\n    if (!city.trim()) newErrors.city = \"Enter city\";\n    if (questions.length === 0) newErrors.questionsError = \"Add questions\";\n\n    const questionsErrors = (newErrors.questions = {});\n\n    for (let i = 0; i < questions.length; i++) {\n      const questionData = questions[i];\n      const { id, question, answerType, answers } = questionData;\n      const questionErrors = (questionsErrors[id] = {});\n\n      if (!question.trim()) questionErrors.question = \"Enter question\";\n      if (!answerType.trim()) questionErrors.answerType = \"Select answer type\";\n\n      if (answerType !== \"custom\" && answers.length === 0)\n        questionErrors.answersError = \"Add answers\";\n\n      const answersErrors = (questionErrors.answers = {});\n\n      if (answerType !== \"custom\") {\n        for (let a = 0; a < answers.length; a++) {\n          const answer = answers[a];\n\n          if (!answer.value.trim()) answersErrors[answer.id] = \"Enter answer\";\n        }\n      }\n\n      if (Object.keys(answersErrors).length === 0)\n        delete questionErrors.answers;\n\n      if (Object.keys(questionErrors).length === 0) delete questionsErrors[id];\n    }\n\n    if (Object.keys(questionsErrors).length === 0) delete newErrors.questions;\n\n    setErrors(newErrors);\n    console.log(newErrors);\n\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const onSubmitData = (e) => {\n    e.preventDefault();\n\n    if (validateData()) {\n      setLoading(true);\n\n      fetch({\n        url: \"https://domain.com/spa/sunrise/\",\n        method: \"PUT\",\n        body: JSON.stringify({\n          ...formData,\n          questions,\n        }),\n      })\n        .then(\n          () =>\n            new Promise((resolve) => {\n              setTimeout(resolve, 3000);\n            })\n        )\n        .then(() => {\n          setFormData({\n            title: \"\",\n            category: \"\",\n            country: \"\",\n            state: \"\",\n            city: \"\",\n          });\n\n          setQuestions([]);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  // Render\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\" style={{ maxWidth: 600 }}>\n        <h1 className=\"display-4 mt-3\">Awesome Forms</h1>\n        <form className=\"mt-5 mb-4\" onSubmit={onSubmitData}>\n          {/* Common data */}\n\n          <h3 className=\"h3 mb-3\">Details</h3>\n\n          <div className=\"mb-3 row\">\n            <label htmlFor=\"title\" className=\"col-sm-3 col-form-label\">\n              Title<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"col-sm-9\">\n              <Input\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                value={formData.title}\n                onChange={(e) => changeField(\"title\", e.target.value)}\n                className={errors.title ? \"is-invalid\" : \"\"}\n              />\n              {errors.title && (\n                <div className=\"invalid-feedback d-block\">{errors.title}</div>\n              )}\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label htmlFor=\"category\" className=\"col-sm-3 col-form-label\">\n              Category<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"col-sm-9\">\n              <Select\n                id=\"category\"\n                name=\"category\"\n                placeholder=\"Select category\"\n                defaultValue={formData.category}\n                onChange={(val) => changeField(\"category\", val)}\n                className={errors.category ? \"is-invalid\" : \"\"}\n              >\n                <Select.Option label=\"Gaming\" value=\"gaming\" />\n                <Select.Option label=\"Films\" value=\"films\" />\n                <Select.Option label=\"Finance\" value=\"finance\" />\n              </Select>\n              {errors.category && (\n                <div className=\"invalid-feedback d-block\">\n                  {errors.category}\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label htmlFor=\"country\" className=\"col-sm-3 col-form-label\">\n              Country<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"col-sm-9\">\n              <Select\n                id=\"country\"\n                name=\"country\"\n                placeholder=\"Select country\"\n                defaultValue={formData.country}\n                onChange={(val) => changeField(\"country\", val)}\n                className={errors.country ? \"is-invalid\" : \"\"}\n              >\n                <Select.Option label=\"Russia\" value=\"ru\" />\n                <Select.Option label=\"Kyrgyzstan\" value=\"kg\" />\n                <Select.Option label=\"USA\" value=\"us\" />\n              </Select>\n              {errors.country && (\n                <div className=\"invalid-feedback d-block\">{errors.country}</div>\n              )}\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label htmlFor=\"state\" className=\"col-sm-3 col-form-label\">\n              State\n            </label>\n            <div className=\"col-sm-9\">\n              <Input\n                type=\"text\"\n                id=\"state\"\n                name=\"state\"\n                value={formData.state}\n                onChange={(e) => changeField(\"state\", e.target.value)}\n                className={errors.state ? \"is-invalid\" : \"\"}\n              />\n              {errors.state && (\n                <div className=\"invalid-feedback d-block\">{errors.state}</div>\n              )}\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label htmlFor=\"city\" className=\"col-sm-3 col-form-label\">\n              City<span className=\"text-danger\">*</span>\n            </label>\n            <div className=\"col-sm-9\">\n              <Input\n                type=\"text\"\n                id=\"city\"\n                name=\"city\"\n                value={formData.city}\n                onChange={(e) => changeField(\"city\", e.target.value)}\n                className={errors.city ? \"is-invalid\" : \"\"}\n              />\n              {errors.city && (\n                <div className=\"invalid-feedback d-block\">{errors.city}</div>\n              )}\n            </div>\n          </div>\n\n          {/* Questions */}\n\n          <h3 className=\"h3 mb-3\">Questions</h3>\n\n          {errors.questionsError && (\n            <div className=\"invalid-feedback d-block\">\n              {errors.questionsError}\n            </div>\n          )}\n\n          <Questions\n            questions={questions}\n            onChangeQuestion={changeQuestion}\n            onAddQuestion={addNewQuestion}\n            onDeleteQuestion={deleteQuestion}\n            errors={errors.questions || {}}\n          />\n\n          {/* Subimt */}\n\n          <br />\n          <Button\n            type=\"submit\"\n            label={loading ? \"Loading...\" : \"Submit\"}\n            disabled={loading}\n            color=\"secondary\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}